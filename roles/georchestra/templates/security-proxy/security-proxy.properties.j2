# ------   proxy-servlet.xml   ---------
proxy.defaultTarget=https://{{ georchestra.fqdn }}
public.host={{ georchestra.fqdn }}

# -------  applicationContext-security.xml   -------
anonymousRole=ROLE_ANONYMOUS
proxy.contextPath=/sec
# url called when user has logged out
logout-success-url=https://{{ georchestra.fqdn }}:443/cas/logout?fromgeorchestra
# url where the user can login
casLoginUrl=https://{{ georchestra.fqdn }}:443/cas/login
# url that the security system uses to validate the cas tickets
casTicketValidation=https://localhost:8443/cas
# After going to the cas login cas forwards to this URL where the authorities and permissions are checked
proxyCallback=https://{{ georchestra.fqdn }}:443/j_spring_cas_security_check
# the ldap url
ldapUrl=ldap://localhost:389
baseDN={{ openldap.basedn }}
# The base DN from where to search for the logged in user.  This mostly to verify the user exists
userSearchBaseDN=ou=users
# the second part of looking up the user
userSearchFilter=(uid={0})
# The base DN to use for looking up the roles/groups/authorities of the logged in user.  Normally the ldap is configured like:
#   ou=groups
#     ou=somegroup
#       member=uid=username,ou=users,{{ openldap.basedn }}
#
#   ou can be cn, ou, or some other option.  member is often uniquemember as well.  If you don't know what this means you need to
#   research LDAP
authoritiesBaseDN=ou=groups
# The attribute of the group which is the rolename
groupRoleAttribute=cn
# the search filter that selects the groups that the user is part of. 
# If a match is found the containing object is one of the groups the user is part of
groupSearchFilter=(member=uid={1},ou=users,{{ openldap.basedn }})
# the admin user's DN (distinguished name) 
#    Depending on how the LDAP is configured you may be able to comment this and password out and add
#     <property name="anonymousReadOnly" value="true" />
#    to the "ldapContextSource" bean
ldapAdminDn={{ openldap.rootdn }}
# The password for binding to the admin user in the ldap
ldap.admin.password={{ openldap.rootpw }}

# health check properties
checkHealth=false
psql.host=localhost
psql.port=5432
psql.db={{ georchestra.db.name }}
psql.user={{ georchestra.db.user }}
psql.pass={{ georchestra.db.pass }}
max.database.connections=10

realmName=georchestra
